
variables:
  repos:
    # IMPORTANT: if you change online_urls here, remember to also fix in develop
    rapydo-confs:
      online_url: https://github.com/rapydo/rapydo-confs.git
      if: true
    utils:
      online_url: https://github.com/rapydo/utils.git
      if: $$devel
    http-api:
      online_url: https://github.com/rapydo/http-api.git
      if: $$devel
    build-templates:
      online_url: https://github.com/rapydo/build-templates.git
      if: true
    rapydo-angular:
      online_url: https://github.com/rapydo/rapydo-angular.git
      if: $$angular
      path: frontend
    rapydo-react:
      online_url: https://github.com/rapydo/rapydo-react.git
      if: $$react
      path: frontend
    rapydo-angularjs:
      online_url: https://github.com/rapydo/angularjs-on-flask.git
      if: $$angularjs
      branch: master
      path: frontend
    do:
      online_url: https://github.com/rapydo/do.git
      if: $$devel
    develop:
      online_url: https://github.com/rapydo/develop.git
      if: false
  backend:
    credentials:
      username: user@nomail.org
      password: test
      roles:
        user: normal_user
        internal: staff_user
        admin: admin_root
        default: normal_user
    # Roles allowed for non-admin users (e.g. coordinator allowed to create users)
    # allowed_roles:
    #   - normal_user
    # List of preauthorized roles with assigned roles
    # preauthorized_users:
    #   yourusername:
    #     - yourrole
    #     - yourrole

  frontend:
    framework: None

  # The list of files to be considered
  composers:
    backend:
      file: backend
      base: True
      # extension: $$shortyaml
      path: $$baseconf
      mandatory: True
      if: $$backend

    # TO BE REMOVED
    frontend:
      file: frontend
      base: True
      path: $$baseconf
      mandatory: False
      if: $$frontend
    #################
    angular:
      file: angular
      base: True
      path: $$baseconf
      mandatory: False
      if: $$angular
    react:
      file: react
      base: True
      path: $$baseconf
      mandatory: False
      if: $$react
    angularjs:
      file: angularjs
      base: True
      path: $$baseconf
      mandatory: False
      if: $$angularjs

    logging:
      file: logging
      base: True
      path: $$baseconf
      mandatory: False
      if: $$logging
    devel:
      file: devel
      base: True
      path: $$baseconf
      mandatory: False
      if: $$devel
    commons:
      file: commons
      base: False
      path: $$customconf
      mandatory: False
      if: $$commons
    mode:
      file: $$mode
      base: False
      path: $$customconf
      mandatory: True
      if: True

  env:

    ACTIVATE_BACKEND: 1
    ACTIVATE_PROXY: 0

    ACTIVATE_POSTGRES: 0
    ACTIVATE_NEO4J: 0
    ACTIVATE_MONGODB: 0

    ACTIVATE_ICAT: 0
    ACTIVATE_CELERY: 0
    ACTIVATE_FTP: 0

    ACTIVATE_SWAGGERUI: 0
    ACTIVATE_SQLALCHEMYUI: 0
    ACTIVATE_MONGOUI: 0
    ACTIVATE_CELERYUI: 0

    ACTIVATE_RESTCLIENT: 0

    API_MAIN_ENDPOINT: status
    PYTHON_MAIN_FILE: __main__
    # Path to dist-packages in backend/celery containers
    PYTHON_PATH: /usr/local/lib/python3.6/dist-packages
    # DB_SUBNET: 172.1.0.0
    BACKEND_BUILD_MODE: backend  # or backendirods
    JWT_APP_SECRETS: /jwt_tokens
    ALCHEMY_HOST: psqldb.dockerized.io
    ALCHEMY_PORT: 5432
    GRAPHDB_HOST: matrix.dockerized.io
    GRAPHDB_BOLT_PORT: 7687
    IRODS_HOST: rodserver.dockerized.io
    IRODS_PORT: 1247
    IRODS_DB: ICAT
    IRODS_AUTHSCHEME:   # to be auto-detected
    MONGO_HOST: mongo.dockerized.io
    MONGO_PORT: 27017
    MONGO_DATABASE: test
    FLASK_HOST: apiserver.dockerized.io
    FLASK_DEFAULT_PORT: 5000
    ELASTIC_HOST: elastic.dockerized.io
    ELASTIC_PORT: 9200
    RABBITMQ_HOST: rabbit.dockerized.io
    RABBITMQ_PORT: 5672

    CELERY_BROKER: RABBIT
    CELERY_BROKER_HOST: broker.dockerized.io
    CELERY_BROKER_PORT: 5672
    CELERY_BROKER_USER:
    CELERY_BROKER_PASSWORD:
    CELERY_BROKER_VHOST:

    CELERY_BACKEND: RABBIT
    CELERY_BACKEND_HOST: broker.dockerized.io
    CELERY_BACKEND_PORT: 4369
    CELERY_BACKEND_USER:
    CELERY_BACKEND_PASSWORD:

    CELERYUI_USER:
    CELERYUI_PASSWORD:
    CELERYUI_DBDIR: /var/flower

    CELERYUI_PORT: 5555
    PROXY_HOST: myproxy.dockerized.io
    PROXY_DEV_PORT: 80
    PROXY_PROD_PORT: 443
    LETSENCRYPT_MODE: --staging
    FULL_JWT: true
    SMTP_HOST: smtp.dockerized.io
    REGISTRATION_NOTIFICATIONS: true

    GRAPHDB_EXTERNAL: 0
    CELERY_EXTERNAL: 0
    IRODS_EXTERNAL: 0

    AUTH_REGISTER_FAILED_LOGIN: False
    AUTH_FORCE_FIRST_PASSWORD_CHANGE: False
    AUTH_VERIFY_PASSWORD_STRENGTH: False
    AUTH_MAX_PASSWORD_VALIDITY: 0
    AUTH_DISABLE_UNUSED_CREDENTIALS_AFTER: 0
    AUTH_MAX_LOGIN_ATTEMPTS: 0
    AUTH_SECOND_FACTOR_AUTHENTICATION: None
    TOKEN_SHORT_TTL: 604800 # 1 week in seconds
    TOKEN_LONG_TTL: 2592000 # 1 month in seconds
    # AUTH_SECOND_FACTOR_AUTHENTICATION: TOTP

project:
  name: rapydo
  title: REST HTTP-API server with Python, Flask and Docker
  version: v0.1
  description: No description yet
  # rapydo: master

tags:
  specifications: JSON with SWAGGER standards for any REST client
  base: endpoints for base operations
  helpers: tools for checking status and privileges
  authentication: log in and out of the REST API
  profiles: set and view profile for current credentials
  open_sessions: manage authorized sessions
