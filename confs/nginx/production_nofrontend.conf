
server {

    listen 80 default_server;
    listen [::]:80 default_server;
    server_tokens off;
    root /usr/share/nginx/html;
    # server_name localhost;
    # server_name _;
    charset utf-8;

    # client_max_body_size 75M;
    client_max_body_size 0;

    # Necessary for certificates issue and renewall
    location /.well-known {
        try_files $uri /dev/null =404;
    }

    # force redirect
    location / {
        return         301 https://$http_host$request_uri;
    }
    # rewrite ^ https://$http_host$request_uri? permanent;
}


# Default server configuration
server {

    # SSL server
    listen 443 ssl default_server;
    listen [::]:443 ssl default_server;
    server_tokens off;
    # server_name localhost;
    root /var/www;
    index index.html index.htm;

    # The x-frame-options header provides clickjacking protection
    # by not allowing iframes to load
    add_header x-frame-options "SAMEORIGIN" always;

    # enable the cross-site scripting (XSS) filter 
    # built into modern web browsers
    add_header x-xss-protection "1; mode=block" always;

    # prevents Internet Explorer and Google Chrome from sniffing a # response away from the declared content-type.
    # This helps reduce the danger of drive-by downloads and helps 
    # treat the content the right way
    add_header X-Content-Type-Options "nosniff" always;

    # config to enable HSTS(HTTP Strict Transport Security)
    add_header strict-transport-security "max-age=31536000; includeSubDomains preload" always;

    # SSL configuration
    #http://askubuntu.com/questions/319192/how-to-enable-tls-1-2-in-nginx
    ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:ECDHE-RSA-AES128-GCM-SHA256:AES256+EECDH:DHE-RSA-AES128-GCM-SHA256:AES256+EDH:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;

    # Let's encrypt
    ssl_certificate /etc/letsencrypt/real/fullchain1.pem;
    ssl_certificate_key /etc/letsencrypt/real/privkey1.pem;

    # # Self signed
    # # http://j.mp/1dH4J5a for your own certificates
    # ssl_certificate_key /etc/nginx/server.key;
    # ssl_certificate /etc/nginx/server.crt;

    # Custom "BAD GATEWAY" error page
    error_page 502 /custom_502.html;
    location = /custom_502.html {
            root /usr/share/nginx/html;
            internal;
    }

    # API python PROXY
    # location /api {
    #     proxy_pass http://apiserver.dockerized.io:8080;
    location / {
        proxy_pass http://apiserver.dockerized.io:8080/;
        # server_name_in_redirect off;
        proxy_set_header   Host $host:$server_port;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-IP $server_addr;

        # client_body_buffer_size   8k;
        # client_max_body_size 32M;
        proxy_buffering             off;
        proxy_request_buffering     off;

        # 90000 seconds = 25 hours
        proxy_connect_timeout       90000;
        proxy_send_timeout          90000;
        proxy_read_timeout          90000;
        send_timeout                90000;

        # It should be already added by FLASK
        # add_header Access-Control-Allow-Origin "*";
    }

#     location /auth {
#         proxy_pass http://apiserver.dockerized.io:8080;
#         # server_name_in_redirect off;
#         proxy_set_header   Host $host:$server_port;
#         proxy_set_header   X-Real-IP $remote_addr;
#         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header   X-Forwarded-IP $server_addr;

#         # It should be already added by FLASK
#         # add_header Access-Control-Allow-Origin "*";
#     }

#     #################################
#     ## FRONTEND

#     # Images and other static files
#     location ~ /static/ {
#         root /data/submodules/frontend/felask/;
#     }

#     location / {
#         proxy_pass http://html:5000;
#         # server_name_in_redirect off;
#         proxy_set_header   Host $host:$server_port;
#         proxy_set_header   X-Real-IP $remote_addr;
#         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header   X-Forwarded-IP $server_addr;

#         # It should be already added by FLASK
#         # add_header Access-Control-Allow-Origin "*";
#     }

}
